name: CI

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10"]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt
        pip install -e .
    
    - name: Lint with flake8
      run: |
        flake8 core modules advanced_modules defense arbitrage data market_intelligence ultra_modules --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 core modules advanced_modules defense arbitrage data market_intelligence ultra_modules --count --exit-zero --max-complexity=10 --max-line-length=88 --statistics
    
    - name: Type check with mypy
      run: |
        mypy core modules --ignore-missing-imports
      continue-on-error: true
    
    - name: Test with pytest
      run: |
        pytest --cov=core --cov=modules --cov=advanced_modules --cov=defense --cov=arbitrage --cov=data --cov=market_intelligence --cov=ultra_modules --cov-report=xml --cov-report=term-missing
    
    - name: Run comprehensive testing framework
      run: |
        python comprehensive_testing_framework.py
      continue-on-error: true
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  docker:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Verify Dockerfile exists
      run: |
        ls -la Dockerfile
        pwd
    
    - name: Build Docker image
      run: docker build -t quant-trading-system:latest .
      working-directory: .
    
    - name: Test Docker image
      run: |
        docker run --rm quant-trading-system:latest python -c "import core; print('Docker build successful')"

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Run security scan with bandit
      run: |
        pip install bandit
        bandit -r core modules advanced_modules defense arbitrage data market_intelligence ultra_modules -f json -o bandit-report.json
      continue-on-error: true
    
    - name: Upload security scan results
      uses: actions/upload-artifact@v4
      with:
        name: bandit-report
        path: bandit-report.json
