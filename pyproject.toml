[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "quant-trading-system"
version = "2.5.0"
description = "Advanced Quantum Finance Integration Trading System with 11-dimensional strategy perception"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Lapommeray", email = "lapommerayr@gmail.com"}
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Financial and Insurance Industry",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Office/Business :: Financial :: Investment",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
requires-python = ">=3.10"
dependencies = [
    "numpy>=1.19.0",
    "pandas>=1.0.0",
    "scipy>=1.5.0",
    "matplotlib>=3.3.0",
    "scikit-learn>=0.23.0",
    "statsmodels>=0.12.0",
    "numba>=0.58.0",
    "yfinance>=0.2.0",
    "websocket-client>=1.6.0",
    "prometheus-client>=0.17.0",
    "requests>=2.31.0",
    "torchsde>=0.2.5",
    "tensorflow>=2.10.0",
    "transformers>=4.20.0",
    "cvxpy>=1.3.0",
    "backtrader>=1.9.76",
    "rasterio>=1.3.0",
    "sortedcontainers>=2.4.0",
    "dask>=2022.7.0",
    "hmmlearn>=0.3.0",
    "changepy>=0.2.0",
    "geomstats>=2.6.0",
    "giotto-tda>=0.6.0",
    "qiskit>=0.45.0",
    "sympy>=1.12",
    "streamlit>=1.28.0",
    "fastapi>=0.104.0",
    "uvicorn>=0.24.0",
    "pydantic>=2.0.0",
    "python-multipart>=0.0.6",
    "aiofiles>=23.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0.0",
    "pytest-cov>=4.0.0",
    "pytest-asyncio>=0.21.0",
    "hypothesis>=6.0.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "pylint>=2.17.0",
    "mypy>=1.5.0",
    "pre-commit>=3.0.0",
    "tox>=4.0.0",
]
test = [
    "pytest>=6.0.0",
    "pytest-cov>=4.0.0",
    "pytest-asyncio>=0.21.0",
    "hypothesis>=6.0.0",
]
docs = [
    "sphinx>=7.0.0",
    "sphinx-rtd-theme>=1.3.0",
    "myst-parser>=2.0.0",
]

[project.urls]
Homepage = "https://github.com/Lapommeray/quant-trading-system"
Repository = "https://github.com/Lapommeray/quant-trading-system"
Issues = "https://github.com/Lapommeray/quant-trading-system/issues"

[project.scripts]
qts-run = "core.qmp_engine:main"
qts-test = "comprehensive_testing_framework:main"

[tool.setuptools.packages.find]
include = ["core*", "modules*", "advanced_modules*", "defense*", "arbitrage*", "data*", "market_intelligence*", "ultra_modules*"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py", "comprehensive_testing_framework.py", "run_complete_enhanced_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short --strict-markers"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "quantum: marks tests requiring quantum computing libraries",
]

[tool.coverage.run]
source = ["core", "modules", "advanced_modules", "defense", "arbitrage", "data", "market_intelligence", "ultra_modules"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/Deco_*/*",
    "*/QMP_*/*",
    "*/Sa_son_code/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | Deco_.*
  | QMP_.*
  | Sa_son_code
)/
'''

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".tox",
    ".eggs",
    "Deco_*",
    "QMP_*",
    "Sa_son_code",
]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
exclude = [
    "Deco_.*",
    "QMP_.*",
    "Sa_son_code",
]

[tool.pylint.messages_control]
disable = [
    "C0103",  # Invalid name
    "R0903",  # Too few public methods
    "R0913",  # Too many arguments
    "W0613",  # Unused argument
]

[tool.pylint.format]
max-line-length = 88
