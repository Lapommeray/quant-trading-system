//@version=5
strategy("Market Mind Reader", overlay=true)

// Input parameters
useFedbias = input.bool(true, "Use Fed Bias")
useDnaPattern = input.bool(true, "Use DNA Pattern")
useLiquidityXray = input.bool(true, "Use Liquidity X-Ray")
symbolInput = input.symbol("SPY", "Symbol")

// Fed bias input (in a real implementation, this would come from an external data source)
fedBias = input.source(close, "Fed Bias (Dovish > 0.7)")
isDovish = fedBias > 0.7

// DNA pattern input (in a real implementation, this would come from an external data source)
dnaPattern = input.string("BULLISH", "DNA Pattern", options=["BULLISH", "BEARISH", "NEUTRAL"])
isBullishDna = dnaPattern == "BULLISH"
isBearishDna = dnaPattern == "BEARISH"

// Liquidity X-ray input (in a real implementation, this would come from an external data source)
liquidityDirection = input.string("UP", "Liquidity Direction", options=["UP", "DOWN", "NEUTRAL"])
isLiquidityUp = liquidityDirection == "UP"
isLiquidityDown = liquidityDirection == "DOWN"

// Calculate signal
var signal = "NEUTRAL"
var confidence = 0.0

// Fed + DNA alignment
if useFedbias and useDnaPattern then
    if isDovish and isBullishDna
        signal := "BUY"
        confidence := 0.7
    else if not isDovish and isBearishDna
        signal := "SELL"
        confidence := 0.7
    else
        signal := "NEUTRAL"
        confidence := 0.0

// Add liquidity X-ray
if useLiquidityXray then
    if isLiquidityUp and signal == "BUY"
        confidence := min(confidence + 0.2, 1.0)
    else if isLiquidityDown and signal == "SELL"
        confidence := min(confidence + 0.2, 1.0)
    else if isLiquidityUp and signal == "NEUTRAL"
        signal := "BUY"
        confidence := 0.5
    else if isLiquidityDown and signal == "NEUTRAL"
        signal := "SELL"
        confidence := 0.5

// Check for news events (SEC Rule 15c3-5)
// In a real implementation, this would check for recent news events
var lastNewsTime = 0
var currentBar = 0
var isNearNews = false

// Simulate news events every 100 bars
currentBar := bar_index
isNearNews := currentBar - lastNewsTime < 5

if bar_index % 100 == 0
    lastNewsTime := currentBar

// Don't trade near news events
if isNearNews
    signal := "NEUTRAL"
    confidence := 0.0

// Plot signals
plotshape(signal == "BUY" and not isNearNews, title="Buy Signal", location=location.belowbar, color=color.green, style=shape.triangleup, size=size.normal)
plotshape(signal == "SELL" and not isNearNews, title="Sell Signal", location=location.abovebar, color=color.red, style=shape.triangledown, size=size.normal)

// Plot confidence
plot(confidence, title="Signal Confidence", color=color.blue, linewidth=2)

// Background color for news events
bgcolor(isNearNews ? color.new(color.red, 90) : na, title="News Event")

// Strategy execution
if signal == "BUY" and not isNearNews
    strategy.entry("Long", strategy.long)
else if signal == "SELL" and not isNearNews
    strategy.entry("Short", strategy.short)

// Add labels with signal details
if signal != "NEUTRAL" and not isNearNews
    label.new(bar_index, high, 
              text="Signal: " + signal + "\nConfidence: " + str.tostring(confidence, "#.##") + 
              "\nFed: " + (isDovish ? "Dovish" : "Hawkish") + 
              "\nDNA: " + dnaPattern + 
              "\nLiquidity: " + liquidityDirection,
              style=signal == "BUY" ? label.style_label_down : label.style_label_up,
              color=signal == "BUY" ? color.green : color.red,
              textcolor=color.white)
